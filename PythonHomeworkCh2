Cell Toolbar:
In [1]:

print("hello world")

hello world

In [2]:

my_dna = "ACTGATCGATTACGTATAGTATTTGCTATCATACATATATATCGATGCGTTCAT"

In [3]:

my_dna

Out[3]:

'ACTGATCGATTACGTATAGTATTTGCTATCATACATATATATCGATGCGTTCAT'

In [4]:

length = len(my_dna)

In [5]:

length

Out[5]:

54

In [6]:

a_count = my_dna.count('A')

In [7]:

a_count

Out[7]:

16

In [8]:

t_count = my_dna.count('T')

In [9]:

print("length: " + str(length))

length: 54

In [10]:

at_content = (a_count + t_count) / length

In [11]:

at_content

Out[11]:

0

In [12]:

print("AT content is " + str(at_content))

AT content is 0

In [13]:

t_count

Out[13]:

21

In [14]:

at_content = (a_count + t_count) / length

In [15]:

at_content

Out[15]:

0

In [16]:

my_dna = "ACTGATCGATTACGTATAGTATTTGCTATCATACATATATATCGATGCGTTCAT"

length = len(my_dna)

a_count = my_dna.count('A')

t_count = my_dna.count('T')

at_content = (a_count + t_count) / length

print("AT content is " + str(at_content))

AT content is 0

In [17]:

my_dna = "ACTGATCGATTACGTATAGTATTTGCTATCATACATATATATCGATGCGTTCAT"

replacement1 = my_dna.replace('A', 't')

print(replacement1)

replacement2 = replacement1.replace('T', 'a')

print(replacement2)

replacement3 = replacement2.replace('C', 'g')

print(replacement3)

replacement4 = replacement3.replace('G', 'c')

print(replacement4)

print(replacement4.upper())

tCTGtTCGtTTtCGTtTtGTtTTTGCTtTCtTtCtTtTtTtTCGtTGCGTTCtT
tCaGtaCGtaatCGatatGataaaGCataCtatCtatatataCGtaGCGaaCta
tgaGtagGtaatgGatatGataaaGgatagtatgtatatatagGtaGgGaagta
tgactagctaatgcatatcataaacgatagtatgtatatatagctacgcaagta
TGACTAGCTAATGCATATCATAAACGATAGTATGTATATATAGCTACGCAAGTA

In [18]:

my_dna = "ACTGATCGATTACGTATAGTAGAATTCTATCATACATATATATCGATGCGTTCAT"

frag1_length = my_dna.find("GAATTC") + 1

frag2_length = len(my_dna) - frag1_length

print("length of fragment one is " + str(frag1_length))

print("length of fragment two is " + str(frag2_length))

length of fragment one is 22
length of fragment two is 33

In [19]:

my_dna =

"ATCGATCGATCGATCGACTGACTAGTCATAGCTATGCATGTAGCTACTCGATCGATCGATCGATCGATCGATC

GATCGATCGATCATGCTATCATCGATCGATATCGATGCATCGACTACTAT"

exon1 = my_dna[0:63]

exon2 = my_dna[90:]

print(exon1 + exon2)

  File "<ipython-input-19-b7146ce3c066>", line 1
    my_dna =
            ^
SyntaxError: invalid syntax


In [20]:

my_dna ="ATCGATCGATCGATCGACTGACTAGTCATAGCTATGCATGTAGCTACTCGATCGATCGATCGATCGATCGATC"

GATCGATCGATCATGCTATCATCGATCGATATCGATGCATCGACTACTAT"

exon1 = my_dna[0:63]

exon2 = my_dna[90:]

print(exon1 + exon2)

 

  File "<ipython-input-20-3e50847ddbfc>", line 2
    GATCGATCGATCATGCTATCATCGATCGATATCGATGCATCGACTACTAT"
                                                      ^
SyntaxError: EOL while scanning string literal


In [21]:

my_dna =

"ATCGATCGATCGATCGACTGACTAGTCATAGCTATGCATGTAGCTACTCGATCGATCGATCGATCGATCGATCGATCGATCGATCATGCTATCATCGATCGATATCGATGCATCGACTACTAT"

exon1 = my_dna[0:63]

exon2 = my_dna[90:]

print(exon1 + exon2)

 

  File "<ipython-input-21-893d051218fa>", line 1
    my_dna =
            ^
SyntaxError: invalid syntax


In [22]:

my_dna ="ATCGATCGATCGATCGACTGACTAGTCATAGCTATGCATGTAGCTACTCGATCGATCGATCGATCGATCGATCGATCGATCGATCATGCTATCATCGATCGATATCGATGCATCGACTACTAT"

exon1 = my_dna[0:63]

exon2 = my_dna[90:]

print(exon1 + exon2)

ATCGATCGATCGATCGACTGACTAGTCATAGCTATGCATGTAGCTACTCGATCGATCGATCGAATCATCGATCGATATCGATGCATCGACTACTAT

In [23]:

my_dna ="ATCGATCGATCGATCGACTGACTAGTCATAGCTATGCATGTAGCTACTCGATCGATCGATCGATCGATCGATCGATCGATCGATCATGCTATCATCGATCGATATCGATGCATCGACTACTAT"

exon1 = my_dna[0:63]

exon2 = my_dna[90:]

coding_length = len(exon1 + exon2)

total_length = len(my_dna)

print(100 * coding_length / total_length)

78

In [24]:

my_dna ="ATCGATCGATCGATCGACTGACTAGTCATAGCTATGCATGTAGCTACTCGATCGATCGATCGATCGATCGATCGATCGATCGATCATGCTATCATCGATCGATATCGATGCATCGACTACTAT"

exon1 = my_dna[0:63]

intron = my_dna[63:90]

exon2 = my_dna[90:]

print(exon1 + intron.lower() + exon2)

ATCGATCGATCGATCGACTGACTAGTCATAGCTATGCATGTAGCTACTCGATCGATCGATCGAtcgatcgatcgatcgatcgatcatgctATCATCGATCGATATCGATGCATCGACTACTAT

